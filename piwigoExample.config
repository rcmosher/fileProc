## This is a real world example of how I use to process a set of videos and then upload them to a self-hosted piwigo gallery. It does the following:
##	1. Create a directory to place the a file in.
##	2. Transcode the file with HandBrakeCLI using some present options, placing the new file in the output path.
##	3. Create an thumbnail for the file using ffmpeg in the pwg_representative sub directory.
##	After each video in the list is processed:
##	1. sftp the whole directory to my gallery server. I have a ssh key so this can be done without the need to login.
##	2. Run some commands from the piwigo-actions project to login to my piwigo gallery, run a synchronization action to include the uploaded files in my gallery, and logout again. Note, this reads my password from a secure location using cat. Instead of catting this, it be better to encrypt the password at the least as an extra precaution to accidental exposure.
##	3. Delete the full directory of output files. I still have the original videos in my input dir, and the transcoded videos on my server, so I don't feel the need to keep a local copy of the new files.

## Note: In my case I have my input files in a folder structure of yyyy/mm/dd. And I want them in a structure of yyyy/mm_Month. This translation is currently hardcoded into fileProcessor.py which is the most likely thing to make this not generally usable.

## See fileProc.config for documentation on the configuration options.
[Main]
input_root_dir = ~/Pictures/
output_root_dir = ~/Videos/PiwigoUpload/galleries/
file_list = fileList.txt

[PreTasks]
# Task to run once before processing all files
command =
	echo "Ready to Go!"
	# Nothing interesting to do for pre-processing in this case.

[Tasks]

# Task to run once for each file
per_file_task =
		 # output directory to hold this file
		 mkdir -p {output_dir} && 
		 # output directory for thumbnail image
		 mkdir -p {output_dir}pwg_representative/ &&
		 # Handbrake using personal preset configuration to process
		 HandBrakeCLI --preset-import-file ~/Videos/PiwigoUpload/Web4Piwigo.json -Z "Web4Piwigo" -i "{input_full_path}" -o "{output_full_path}" &&
		 # Generate thumbnail image
		 ffmpeg -i "{input_full_path}" -ss 00:00:01.000 -vframes 1 "{output_dir}pwg_representative/{output_base_file}.png"

[PostTasks]
# Tasks to run once after processing files
# A current limitation is you can't say 'sftp ... <<< sftp_command
command =
		 # sftp the directory to my piwigo server. I have a key pair to login so no password is required
		 echo "put -r {output_root_dir}" | sftp user@mypiwigo.site:www/piwigo/ &&
		 # Log in to my piwigo site using scripts from piwigo-actions
		 # https://github.com/rcmosher/piwigo-actions
		 # This reads a password from a file to keep it out of this script.
		 # But it would be even better if the password was also encrypted.
		 /home/user/scripts/Piwigio-Actions/piwigo.login.sh https://www.mypiwigo.site/ user `cat /home/user/.secure/piwigo.cred` ./cookieFile &&
		 # Run an action to sync the files uploaded to piwigo into the gallery
		 /home/user/scripts/Piwigio-Actions/piwigo.sync.sh https://www.mypiwigo.site/ ./cookieFile &&
		 # Log back out and clean up the cookie
		 /home/user/scripts/Piwigio-Actions/piwigo.logout.sh https://www.mypiwigo.site/ ./cookieFile &&
		 # With the files now uploaded to the piwigo site delete the local copy
		 # of the transcoded files
		 rm -r {output_root_dir}/*
